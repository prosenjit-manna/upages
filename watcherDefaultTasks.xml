<application>
  <component name="ApplicationTasksOptions">
    <TaskOptions isEnabled="true">
      <option name="arguments" value="$FileName$ -o $FileNameWithoutExtension$.min.css" />
      <option name="checkSyntaxErrors" value="true" />
      <option name="description" value="Compresses .css files" />
      <option name="exitCodeBehavior" value="ERROR" />
      <option name="fileExtension" value="css" />
      <option name="immediateSync" value="true" />
      <option name="name" value="YUI Compressor CSS" />
      <option name="output" value="$FileNameWithoutExtension$.min.css" />
      <option name="outputFilters">
        <array />
      </option>
      <option name="outputFromStdout" value="false" />
      <option name="passParentEnvs" value="true" />
      <option name="program" value="/usr/bin/yuicompressor" />
      <option name="scopeName" value="Project Files" />
      <option name="trackOnlyRoot" value="true" />
      <option name="workingDir" value="$FileDir$" />
      <envs />
    </TaskOptions>
    <TaskOptions isEnabled="false">
      <option name="arguments" value="$ProjectFileDir$/app/js/$FileName$ -o $ProjectFileDir$/build/js/all.min.js" />
      <option name="checkSyntaxErrors" value="true" />
      <option name="description" value="Compresses .js files" />
      <option name="exitCodeBehavior" value="ERROR" />
      <option name="fileExtension" value="js" />
      <option name="immediateSync" value="true" />
      <option name="name" value="YUI Compressor JS" />
      <option name="output" value="$ProjectFileDir$/build/js/all.min.js" />
      <option name="outputFilters">
        <array />
      </option>
      <option name="outputFromStdout" value="false" />
      <option name="passParentEnvs" value="true" />
      <option name="program" value="/usr/bin/yuicompressor" />
      <option name="scopeName" value="Project Files" />
      <option name="trackOnlyRoot" value="true" />
      <option name="workingDir" value="$ProjectFileDir$/app/js/" />
      <envs />
    </TaskOptions>
    <TaskOptions isEnabled="false">
      <option name="arguments" value="-i $FileName$ -o $FileNameWithoutExtension$.min.css" />
      <option name="checkSyntaxErrors" value="true" />
      <option name="description" value="Compresses .css files" />
      <option name="exitCodeBehavior" value="ERROR" />
      <option name="fileExtension" value="css" />
      <option name="immediateSync" value="true" />
      <option name="name" value="CSSO CSS Optimizer" />
      <option name="output" value="$FileNameWithoutExtension$.min.css" />
      <option name="outputFilters">
        <array />
      </option>
      <option name="outputFromStdout" value="false" />
      <option name="passParentEnvs" value="true" />
      <option name="program" value="/usr/bin/csso" />
      <option name="scopeName" value="Project Files" />
      <option name="trackOnlyRoot" value="true" />
      <option name="workingDir" value="$FileDir$" />
      <envs />
    </TaskOptions>
    <TaskOptions isEnabled="false">
      <option name="arguments" value="--output-style compressed $ProjectFileDir$/app/scss/$FileNameWithoutAllExtensions$.scss $ProjectFileDir$/build/scss/$FileNameWithoutAllExtensions$.css" />
      <option name="checkSyntaxErrors" value="true" />
      <option name="description" value="Compiles .scss files into .css files" />
      <option name="exitCodeBehavior" value="ERROR" />
      <option name="fileExtension" value="scss" />
      <option name="immediateSync" value="true" />
      <option name="name" value="SCSS" />
      <option name="output" value="$ProjectFileDir$/build/scss/$FileNameWithoutAllExtensions$.css" />
      <option name="outputFilters">
        <array />
      </option>
      <option name="outputFromStdout" value="false" />
      <option name="passParentEnvs" value="true" />
      <option name="program" value="/usr/bin/node-sass" />
      <option name="scopeName" value="Project Files" />
      <option name="trackOnlyRoot" value="true" />
      <option name="workingDir" value="$FileDir$" />
      <envs />
    </TaskOptions>
    <TaskOptions isEnabled="true">
      <option name="arguments" value="--style expanded --sourcemap $FileName$ $FileNameWithoutExtension$.css" />
      <option name="checkSyntaxErrors" value="true" />
      <option name="description" value="Compiles .scss files into .css files" />
      <option name="exitCodeBehavior" value="ERROR" />
      <option name="fileExtension" value="scss" />
      <option name="immediateSync" value="true" />
      <option name="name" value="Libsass" />
      <option name="output" value="$ProjectFileDir$" />
      <option name="outputFilters">
        <array />
      </option>
      <option name="outputFromStdout" value="false" />
      <option name="passParentEnvs" value="true" />
      <option name="program" value="/usr/local/bin/sassc" />
      <option name="scopeName" value="Project Files" />
      <option name="trackOnlyRoot" value="true" />
      <option name="workingDir" value="$FileDir$" />
      <envs />
    </TaskOptions>
    <TaskOptions isEnabled="true">
      <option name="arguments" value="--map --compile $FileName$" />
      <option name="checkSyntaxErrors" value="true" />
      <option name="description" value="Compiles .coffee files into .js files" />
      <option name="exitCodeBehavior" value="ALWAYS" />
      <option name="fileExtension" value="coffee" />
      <option name="immediateSync" value="true" />
      <option name="name" value="CoffeeScript" />
      <option name="output" value="$FileNameWithoutExtension$.js:$FileNameWithoutExtension$.map:$FileNameWithoutExtension$.js.map" />
      <option name="outputFilters">
        <array>
          <FilterInfo>
            <option name="description" value="coffee error format" />
            <option name="name" value="coffee" />
            <option name="regExp" value="$FILE_PATH$:$LINE$:$COLUMN$: $MESSAGE$$" />
          </FilterInfo>
        </array>
      </option>
      <option name="outputFromStdout" value="false" />
      <option name="passParentEnvs" value="true" />
      <option name="program" value="/usr/bin/coffee" />
      <option name="scopeName" value="Project Files" />
      <option name="trackOnlyRoot" value="true" />
      <option name="workingDir" value="$FileDir$" />
      <envs />
    </TaskOptions>
    <TaskOptions isEnabled="false">
      <option name="arguments" value="$FileName$ --pretty --path $ProjectFileDir$/app/view/ --out $ProjectFileDir$/build" />
      <option name="checkSyntaxErrors" value="true" />
      <option name="description" value="Compiles .jade files into .html files" />
      <option name="exitCodeBehavior" value="ALWAYS" />
      <option name="fileExtension" value="jade" />
      <option name="immediateSync" value="true" />
      <option name="name" value="Jade" />
      <option name="output" value="$ProjectFileDir$/build/$FileNameWithoutExtension$.html" />
      <option name="outputFilters">
        <array />
      </option>
      <option name="outputFromStdout" value="true" />
      <option name="passParentEnvs" value="true" />
      <option name="program" value="/usr/bin/jade" />
      <option name="scopeName" value="Project Files" />
      <option name="trackOnlyRoot" value="false" />
      <option name="workingDir" value="" />
      <envs />
    </TaskOptions>
    <TaskOptions isEnabled="true">
      <option name="arguments" value="start --server --files &quot;$ProjectFileDir$/build/$FileNameWithoutAllExtensions$.*&quot;" />
      <option name="checkSyntaxErrors" value="true" />
      <option name="description" value="" />
      <option name="exitCodeBehavior" value="ERROR" />
      <option name="fileExtension" value="*" />
      <option name="immediateSync" value="true" />
      <option name="name" value="" />
      <option name="output" value="" />
      <option name="outputFilters">
        <array />
      </option>
      <option name="outputFromStdout" value="false" />
      <option name="passParentEnvs" value="true" />
      <option name="program" value="/usr/bin/browser-sync" />
      <option name="scopeName" value="Project Files" />
      <option name="trackOnlyRoot" value="false" />
      <option name="workingDir" value="" />
      <envs />
    </TaskOptions>
    <TaskOptions isEnabled="false">
      <option name="arguments" value="start --server --files &quot;$ProjectFileDir$/build/index.html&quot;" />
      <option name="checkSyntaxErrors" value="true" />
      <option name="description" value="Browsersync" />
      <option name="exitCodeBehavior" value="ALWAYS" />
      <option name="fileExtension" value="*" />
      <option name="immediateSync" value="true" />
      <option name="name" value="Browsersync" />
      <option name="output" value="" />
      <option name="outputFilters">
        <array />
      </option>
      <option name="outputFromStdout" value="false" />
      <option name="passParentEnvs" value="true" />
      <option name="program" value="/usr/bin/browser-sync" />
      <option name="scopeName" value="Project Files" />
      <option name="trackOnlyRoot" value="false" />
      <option name="workingDir" value="" />
      <envs />
    </TaskOptions>
    <TaskOptions isEnabled="true">
      <option name="arguments" value="--no-color $FileName$" />
      <option name="checkSyntaxErrors" value="true" />
      <option name="description" value="Compiles .less files into .css files" />
      <option name="exitCodeBehavior" value="ERROR" />
      <option name="fileExtension" value="less" />
      <option name="immediateSync" value="true" />
      <option name="name" value="Less" />
      <option name="output" value="$FileNameWithoutExtension$.css" />
      <option name="outputFilters">
        <array>
          <FilterInfo>
            <option name="description" value="lessc error format" />
            <option name="name" value="lessc" />
            <option name="regExp" value="$MESSAGE$$FILE_PATH$?:$LINE$:$COLUMN$" />
          </FilterInfo>
        </array>
      </option>
      <option name="outputFromStdout" value="true" />
      <option name="passParentEnvs" value="true" />
      <option name="program" value="/usr/bin/lessc" />
      <option name="scopeName" value="Project Files" />
      <option name="trackOnlyRoot" value="false" />
      <option name="workingDir" value="$FileDir$" />
      <envs />
    </TaskOptions>
    <TaskOptions isEnabled="true">
      <option name="arguments" value="-s " />
      <option name="checkSyntaxErrors" value="true" />
      <option name="description" value="" />
      <option name="exitCodeBehavior" value="ERROR" />
      <option name="fileExtension" value="scss" />
      <option name="immediateSync" value="true" />
      <option name="name" value="Libsass" />
      <option name="output" value="" />
      <option name="outputFilters">
        <array />
      </option>
      <option name="outputFromStdout" value="false" />
      <option name="passParentEnvs" value="true" />
      <option name="program" value="/usr/local/bin/sassc" />
      <option name="scopeName" value="Project Files" />
      <option name="trackOnlyRoot" value="false" />
      <option name="workingDir" value="" />
      <envs />
    </TaskOptions>
    <TaskOptions isEnabled="false">
      <option name="arguments" value="$FileName$ -o $ProjectFileDir$/build/js/$FileNameWithoutExtension$.min.js" />
      <option name="checkSyntaxErrors" value="true" />
      <option name="description" value="Compress .js files" />
      <option name="exitCodeBehavior" value="ERROR" />
      <option name="fileExtension" value="js" />
      <option name="immediateSync" value="true" />
      <option name="name" value="UglifyJS" />
      <option name="output" value="$ProjectFileDir$/build/js/$FileNameWithoutExtension$.min.js" />
      <option name="outputFilters">
        <array />
      </option>
      <option name="outputFromStdout" value="false" />
      <option name="passParentEnvs" value="true" />
      <option name="program" value="/usr/bin/uglifyjs" />
      <option name="scopeName" value="Project Files" />
      <option name="trackOnlyRoot" value="true" />
      <option name="workingDir" value="$FileDir$" />
      <envs />
    </TaskOptions>
  </component>
</application>